diff --git a/pappl/mainloop-private.h b/pappl/mainloop-private.h
index 5af4695..9bde73a 100644
--- a/pappl/mainloop-private.h
+++ b/pappl/mainloop-private.h
@@ -59,7 +59,7 @@ extern void	_papplMainloopAddPrinterURI(ipp_t *request, const char *printer_name
 extern http_t	*_papplMainloopConnect(const char *base_name, bool auto_start) _PAPPL_PRIVATE;
 extern http_t	*_papplMainloopConnectURI(const char *base_name, const char *printer_uri, char  *resource, size_t rsize) _PAPPL_PRIVATE;
 extern char	*_papplMainloopGetDefaultPrinter(http_t *http, char *buffer, size_t bufsize) _PAPPL_PRIVATE;
-extern char	*_papplMainloopGetServerPath(const char *base_name, char *buffer, size_t bufsize) _PAPPL_PRIVATE;
+  extern char	*_papplMainloopGetServerPath(const char *base_name, bool system_wide, char *buffer, size_t bufsize) _PAPPL_PRIVATE;
 
 
 //
diff --git a/pappl/mainloop-subcommands.c b/pappl/mainloop-subcommands.c
index a572d6e..a79ac03 100644
--- a/pappl/mainloop-subcommands.c
+++ b/pappl/mainloop-subcommands.c
@@ -605,7 +605,7 @@ _papplMainloopRunServer(
     papplSystemSetPrinterDrivers(system, num_drivers, drivers, autoadd_cb, /* create_cb */NULL, driver_cb, data);
 
   // Listen for connections...
-  papplSystemAddListeners(system, _papplMainloopGetServerPath(base_name, sockname, sizeof(sockname)));
+  papplSystemAddListeners(system, _papplMainloopGetServerPath(base_name, false, sockname, sizeof(sockname)));
 
   // Finish initialization...
   if (!system->save_cb)
diff --git a/pappl/mainloop-support.c b/pappl/mainloop-support.c
index e54f438..deb5d94 100644
--- a/pappl/mainloop-support.c
+++ b/pappl/mainloop-support.c
@@ -316,8 +316,12 @@ _papplMainloopConnect(
   char		sockname[1024];		// Socket filename
 
 
-  // See if the server is running...
-  http = httpConnect2(_papplMainloopGetServerPath(base_name, sockname, sizeof(sockname)), 0, NULL, AF_UNSPEC, HTTP_ENCRYPTION_IF_REQUESTED, 1, 30000, NULL);
+  // See if a user server is running...
+  http = httpConnect2(_papplMainloopGetServerPath(base_name, false, sockname, sizeof(sockname)), 0, NULL, AF_UNSPEC, HTTP_ENCRYPTION_IF_REQUESTED, 1, 30000, NULL);
+
+  // See if there is a system-wide server
+  if (!http)
+    http = httpConnect2(_papplMainloopGetServerPath(base_name, true, sockname, sizeof(sockname)), 0, NULL, AF_UNSPEC, HTTP_ENCRYPTION_IF_REQUESTED, 1, 30000, NULL);
 
   if (!http && auto_start)
   {
@@ -333,6 +337,8 @@ _papplMainloopConnect(
       NULL
     };
 
+    _papplMainloopGetServerPath(base_name, false, sockname, sizeof(sockname));
+
     posix_spawnattr_init(&server_attrs);
     posix_spawnattr_setpgroup(&server_attrs, 0);
 
@@ -449,6 +455,7 @@ _papplMainloopGetDefaultPrinter(
 char *					// O - Socket filename
 _papplMainloopGetServerPath(
     const char *base_name,		// I - Base name
+    bool       system_wide,		// I - System-wide server
     char       *buffer,			// I - Buffer for filename
     size_t     bufsize)			// I - Size of buffer
 {
@@ -463,7 +470,7 @@ _papplMainloopGetServerPath(
     tmpdir = "/tmp";
 #endif // __APPLE__
 
-  snprintf(buffer, bufsize, "%s/%s%d.sock", tmpdir, base_name, (int)getuid());
+  snprintf(buffer, bufsize, "%s/%s%d.sock", tmpdir, base_name, (system_wide ? 0 : (int)getuid()));
   _PAPPL_DEBUG("Creating domain socket as '%s'.\n", buffer);
 
   return (buffer);
